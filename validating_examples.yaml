# Copyright 2023 Undistro Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

examples:
  - name: "default"
    vap: |
      apiVersion: admissionregistration.k8s.io/v1alpha1
      kind: ValidatingAdmissionPolicy
      metadata:
        name: "force-ha-in-prod"
      spec:
        failurePolicy: Fail
        matchConstraints:
          resourceRules:
          - apiGroups:   ["apps"]
            apiVersions: ["v1"]
            operations:  ["CREATE", "UPDATE"]
            resources:   ["deployments"]
        validations:
          - expression: "object.spec.replicas >= 3"
            message: "All production deployments should be HA with at least three replicas"

    dataOriginal: |

    dataUpdated: |
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        labels:
          app: kubernetes-bootcamp
        name: kubernetes-bootcamp
        namespace: default
      spec:
        progressDeadlineSeconds: 600
        replicas: 1
        revisionHistoryLimit: 10
        selector:
          matchLabels:
            app: kubernetes-bootcamp
        strategy:
          rollingUpdate:
            maxSurge: 25%
            maxUnavailable: 25%
          type: RollingUpdate
        template:
          metadata:
            creationTimestamp: null
            labels:
              app: kubernetes-bootcamp
          spec:
            containers:
            - image: gcr.io/google-samples/kubernetes-bootcamp:v1
              imagePullPolicy: IfNotPresent
              name: kubernetes-bootcamp
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
            dnsPolicy: ClusterFirst
            restartPolicy: Always
            schedulerName: default-scheduler
            securityContext: {}
            terminationGracePeriodSeconds: 30
