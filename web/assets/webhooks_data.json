{
  "examples": [
    {
      "name": "Request Accept",
      "webhooks": "apiVersion: admissionregistration.k8s.io/v1\nkind: ValidatingWebhookConfiguration\nwebhooks:\n  - name: my-webhook.example.com\n    matchPolicy: Equivalent\n    rules:\n      - operations: ['CREATE','UPDATE']\n        apiGroups: ['*']\n        apiVersions: ['*']\n        resources: ['*']\n    failurePolicy: 'Ignore' # Fail-open (optional)\n    sideEffects: None\n    clientConfig:\n      service:\n        namespace: my-namespace\n        name: my-webhook\n      caBundle: 'PGNhYnVuZGxlPgo='\n    # You can have up to 64 matchConditions per webhook\n    matchConditions:\n      - name: 'exclude-leases' # Each match condition must have a unique name\n        expression: '!(request.resource.group == \"coordination.k8s.io\" && request.resource.resource == \"leases\")' # Match non-lease resources.\n      - name: 'exclude-kubelet-requests'\n        expression: '!(\"system:nodes\" in request.userInfo.groups)' # Match requests made by non-node users.\n",
      "dataOriginal": "",
      "dataUpdated": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: kubernetes-bootcamp\n  name: kubernetes-bootcamp\n  namespace: default\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: kubernetes-bootcamp\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: kubernetes-bootcamp\n    spec:\n      containers:\n      - image: gcr.io/google-samples/kubernetes-bootcamp:v1\n        imagePullPolicy: IfNotPresent\n        name: kubernetes-bootcamp\n        resources: {}\n        terminationMessagePath: /dev/termination-log\n        terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\n",
      "dataRequest": "uid: 705ab4f5-6393-11e8-b7cc-42010a800002\nkind:\n  group: apps\n  version: v1\n  resource: deployments\nresource:\n  group: apps\n  version: v1\n  resource: deployments\nrequestKind:\n  group: apps\n  version: v1\n  resource: deployments\nrequestResource:\n  group: apps\n  version: v1\n  resource: deployments\nname: kubernetes-bootcamp\nnamespace: default\noperation: CREATE\nuserInfo:\n  username: admin\n  uid: 014fbff9a07c\n  groups:\n    - system:authenticated\n    - my-admin-group\n  extra:\n    some-key:\n      - some-value1\n      - some-value2\n",
      "dataAuthorizer": ""
    },
    {
      "name": "Request Ignore Leases",
      "webhooks": "apiVersion: admissionregistration.k8s.io/v1\nkind: ValidatingWebhookConfiguration\nwebhooks:\n  - name: my-webhook.example.com\n    matchPolicy: Equivalent\n    rules:\n      - operations: ['CREATE','UPDATE']\n        apiGroups: ['*']\n        apiVersions: ['*']\n        resources: ['*']\n    failurePolicy: 'Ignore' # Fail-open (optional)\n    sideEffects: None\n    clientConfig:\n      service:\n        namespace: my-namespace\n        name: my-webhook\n      caBundle: 'PGNhYnVuZGxlPgo='\n    # You can have up to 64 matchConditions per webhook\n    matchConditions:\n      - name: 'exclude-leases' # Each match condition must have a unique name\n        expression: '!(request.resource.group == \"coordination.k8s.io\" && request.resource.resource == \"leases\")' # Match non-lease resources.\n      - name: 'exclude-kubelet-requests'\n        expression: '!(\"system:nodes\" in request.userInfo.groups)' # Match requests made by non-node users.\n",
      "dataOriginal": "",
      "dataUpdated": "apiVersion: coordination.k8s.io/v1\nkind: Lease\nmetadata:\n  name: ingress-nginx-leader\n  namespace: ingress-nginx\nspec:\n  acquireTime: \"2023-11-24T16:51:02.229818Z\"\n  holderIdentity: ingress-nginx-controller-6597456577-s5h9w\n  leaseDurationSeconds: 30\n  leaseTransitions: 7\n  renewTime: \"2024-04-09T21:59:30.694589Z\"\n",
      "dataRequest": "uid: 705ab4f5-6393-11e8-b7cc-42010a800002\nkind:\n  group: coordination.k8s.io\n  version: v1\n  resource: leases\nresource:\n  group: coordination.k8s.io\n  version: v1\n  resource: leases\nrequestKind:\n  group: coordination.k8s.io\n  version: v1\n  resource: leases\nrequestResource:\n  group: coordination.k8s.io\n  version: v1\n  resource: leases\nname: ingress-nginx-leader\nnamespace: ingress-nginx\noperation: CREATE\nuserInfo:\n  username: admin\n  uid: 014fbff9a07c\n  groups:\n    - system:authenticated\n    - my-admin-group\n  extra:\n    some-key:\n      - some-value1\n      - some-value2\n",
      "dataAuthorizer": ""
    },
    {
      "name": "Request Ignore Kubelet",
      "webhooks": "apiVersion: admissionregistration.k8s.io/v1\nkind: ValidatingWebhookConfiguration\nwebhooks:\n  - name: my-webhook.example.com\n    matchPolicy: Equivalent\n    rules:\n      - operations: ['CREATE','UPDATE']\n        apiGroups: ['*']\n        apiVersions: ['*']\n        resources: ['*']\n    failurePolicy: 'Ignore' # Fail-open (optional)\n    sideEffects: None\n    clientConfig:\n      service:\n        namespace: my-namespace\n        name: my-webhook\n      caBundle: 'PGNhYnVuZGxlPgo='\n    # You can have up to 64 matchConditions per webhook\n    matchConditions:\n      - name: 'exclude-leases' # Each match condition must have a unique name\n        expression: '!(request.resource.group == \"coordination.k8s.io\" && request.resource.resource == \"leases\")' # Match non-lease resources.\n      - name: 'exclude-kubelet-requests'\n        expression: '!(\"system:nodes\" in request.userInfo.groups)' # Match requests made by non-node users.\n",
      "dataOriginal": "",
      "dataUpdated": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: kubernetes-bootcamp\n  name: kubernetes-bootcamp\n  namespace: default\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: kubernetes-bootcamp\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: kubernetes-bootcamp\n    spec:\n      containers:\n      - image: gcr.io/google-samples/kubernetes-bootcamp:v1\n        imagePullPolicy: IfNotPresent\n        name: kubernetes-bootcamp\n        resources: {}\n        terminationMessagePath: /dev/termination-log\n        terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\n",
      "dataRequest": "uid: 705ab4f5-6393-11e8-b7cc-42010a800002\nkind:\n  group: apps\n  version: v1\n  resource: deployments\nresource:\n  group: apps\n  version: v1\n  resource: deployments\nrequestKind:\n  group: apps\n  version: v1\n  resource: deployments\nrequestResource:\n  group: apps\n  version: v1\n  resource: deployments\nname: kubernetes-bootcamp\nnamespace: default\noperation: CREATE\nuserInfo:\n  username: node1\n  uid: 014fbff9a07c\n  groups:\n    - system:nodes\n  extra:\n    some-key:\n      - some-value1\n      - some-value2\n",
      "dataAuthorizer": ""
    },
    {
      "name": "Authorizer Accept",
      "webhooks": "apiVersion: admissionregistration.k8s.io/v1\nkind: ValidatingWebhookConfiguration\nwebhooks:\n  - name: rbac.my-webhook.example.com\n    matchPolicy: Equivalent\n    rules:\n      - operations: ['CREATE','UPDATE']\n        apiGroups: ['apps']\n        apiVersions: ['*']\n        resources: ['*']\n    failurePolicy: 'Fail' # Fail-closed (the default)\n    sideEffects: None\n    clientConfig:\n      service:\n        namespace: my-namespace\n        name: my-webhook\n      caBundle: 'PGNhYnVuZGxlPgo='\n    # You can have up to 64 matchConditions per webhook\n    matchConditions:\n      - name: 'breakglass'\n        # Skip requests made by users authorized to 'breakglass' on this webhook.\n        # The 'breakglass' API verb does not need to exist outside this check.\n        expression: '!authorizer.group(\"admissionregistration.k8s.io\").resource(\"validatingwebhookconfigurations\").name(\"rbac.my-webhook.example.com\").check(\"breakglass\").allowed()'\n",
      "dataOriginal": "",
      "dataUpdated": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: kubernetes-bootcamp\n  name: kubernetes-bootcamp\n  namespace: default\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: kubernetes-bootcamp\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: kubernetes-bootcamp\n    spec:\n      containers:\n      - image: gcr.io/google-samples/kubernetes-bootcamp:v1\n        imagePullPolicy: IfNotPresent\n        name: kubernetes-bootcamp\n        resources: {}\n        terminationMessagePath: /dev/termination-log\n        terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\n",
      "dataRequest": "uid: 705ab4f5-6393-11e8-b7cc-42010a800002\nkind:\n  group: apps\n  version: v1\n  resource: deployments\nresource:\n  group: apps\n  version: v1\n  resource: deployments\nrequestKind:\n  group: apps\n  version: v1\n  resource: deployments\nrequestResource:\n  group: apps\n  version: v1\n  resource: deployments\nname: kubernetes-bootcamp\nnamespace: default\noperation: CREATE\nuserInfo:\n  username: admin\n  uid: 014fbff9a07c\n  groups:\n    - system:authenticated\n    - my-admin-group\n  extra:\n    some-key:\n      - some-value1\n      - some-value2\n",
      "dataAuthorizer": "paths:\ngroups:\nserviceAccounts:\n"
    },
    {
      "name": "Authorizer Ignore breakglass",
      "webhooks": "apiVersion: admissionregistration.k8s.io/v1\nkind: ValidatingWebhookConfiguration\nwebhooks:\n  - name: rbac.my-webhook.example.com\n    matchPolicy: Equivalent\n    rules:\n      - operations: ['CREATE','UPDATE']\n        apiGroups: ['apps']\n        apiVersions: ['*']\n        resources: ['*']\n    failurePolicy: 'Fail' # Fail-closed (the default)\n    sideEffects: None\n    clientConfig:\n      service:\n        namespace: my-namespace\n        name: my-webhook\n      caBundle: 'PGNhYnVuZGxlPgo='\n    # You can have up to 64 matchConditions per webhook\n    matchConditions:\n      - name: 'breakglass'\n        # Skip requests made by users authorized to 'breakglass' on this webhook.\n        # The 'breakglass' API verb does not need to exist outside this check.\n        expression: '!authorizer.group(\"admissionregistration.k8s.io\").resource(\"validatingwebhookconfigurations\").name(\"rbac.my-webhook.example.com\").check(\"breakglass\").allowed()'\n",
      "dataOriginal": "",
      "dataUpdated": "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  labels:\n    app: kubernetes-bootcamp\n  name: kubernetes-bootcamp\n  namespace: default\nspec:\n  progressDeadlineSeconds: 600\n  replicas: 1\n  revisionHistoryLimit: 10\n  selector:\n    matchLabels:\n      app: kubernetes-bootcamp\n  strategy:\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n    type: RollingUpdate\n  template:\n    metadata:\n      creationTimestamp: null\n      labels:\n        app: kubernetes-bootcamp\n    spec:\n      containers:\n      - image: gcr.io/google-samples/kubernetes-bootcamp:v1\n        imagePullPolicy: IfNotPresent\n        name: kubernetes-bootcamp\n        resources: {}\n        terminationMessagePath: /dev/termination-log\n        terminationMessagePolicy: File\n      dnsPolicy: ClusterFirst\n      restartPolicy: Always\n      schedulerName: default-scheduler\n      securityContext: {}\n      terminationGracePeriodSeconds: 30\n",
      "dataRequest": "uid: 705ab4f5-6393-11e8-b7cc-42010a800002\nkind:\n  group: apps\n  version: v1\n  resource: deployments\nresource:\n  group: apps\n  version: v1\n  resource: deployments\nrequestKind:\n  group: apps\n  version: v1\n  resource: deployments\nrequestResource:\n  group: apps\n  version: v1\n  resource: deployments\nname: kubernetes-bootcamp\nnamespace: default\noperation: CREATE\nuserInfo:\n  username: admin\n  uid: 014fbff9a07c\n  groups:\n    - system:authenticated\n    - my-admin-group\n  extra:\n    some-key:\n      - some-value1\n      - some-value2\n",
      "dataAuthorizer": "paths:\ngroups:\n  admissionregistration.k8s.io:\n    resources:\n      validatingwebhookconfigurations:\n        checks:\n          \"\":\n            rbac.my-webhook.example.com:\n              breakglass:\n                decision: allow\nserviceAccounts:\n"
    }
  ],
  "versions": {
    "cel-go": "v0.17.8"
  }
}
